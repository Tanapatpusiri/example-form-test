import Head from "next/head";
import * as React from "react";
import { FC, useState, ChangeEvent } from "react";
import { FormGroup, Grid } from "@mui/material";
import { TextField } from "@mui/material";
import { FormControlLabel } from "@mui/material";
import { Checkbox } from "@mui/material";
import { FormLabel } from "@mui/material";
import { RadioGroup } from "@mui/material";
import { FormControl } from "@mui/material";
import { Radio } from "@mui/material";
import { Select } from "@mui/material";
import { MenuItem } from "@mui/material";
import { InputLabel } from "@mui/material";
import Button from "@mui/material/Button";
import Stack from "@mui/material/Stack";
import ListUser from "./ListUser";
import DeleteIcon from "@mui/icons-material/Delete";


export interface Alluser {
  Firstname:string
  Lastname:string
  Email:string
  Pdpa:boolean
  Gender:string
  Hobby:string[]
  Status:string|null
  Note:string
}

export default function Web() {
  const options = ["Single", "Married", "Divorce"];
  const [firstname, setFirstName] = useState<string>("");
  const [lasttname, setLastName] = useState<string>("");
  const [email, setEmail] = useState<string>("");
  const [pdpa, setPDPA] = useState<boolean>(false);
  const [gender, setGender] = useState<string>("Male");
  const [hobby, setHobby] = useState<string[]>([]);
  const [status, setStatus] = useState<string | null>("");
  const [note, setNote] = useState<string>("");
  const [user, setUser] = useState<Alluser[]>([]);

  const adduser = (): void => {
    const newUser = {
      Firstname: firstname,
      Lastname: lasttname,
      Email: email,
      Pdpa: pdpa,
      Gender: gender,
      Hobby: hobby,
      Note: note,
      Status: status,
    };
    setUser([...user, newUser]);
  };

  const reset = (): void => {
    setFirstName("");
    setLastName("");
    setEmail("");
    setPDPA(false);
    setGender("Male");
    setHobby([]);
    setStatus("");
    setNote("");
    console.log(status);
  };
  const Hobbychange = (event: React.ChangeEvent<HTMLInputElement>) => {
    const index = hobby.indexOf(event.target.value);
    if (index === -1) {
      setHobby([...hobby, event.target.value]);
    } else {
      setHobby(hobby.filter((hobby) => hobby !== event.target.value));
    }
  };

  const HandleDelete = (x: number) => {
    const deleteuser = [...user];
    deleteuser.splice(x, 1);
    setUser(deleteuser);
  };

  return (
    <>
      <Head>
        <title>ExampleForm</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <>
        <div className="navbar">
          <p className="navtext">User Profile Management System</p>
        </div>
        <div></div>
        <form>
          <div className="form">
            <div className="grid-item">
              <div className="textprofile">
                <p>Profile management</p>
              </div>
              <div className="leftform">
                <div className="grid">
                  <Grid container spacing={4}>
                    <Grid item xs={6}>
                      <TextField
                        id="firstname"
                        label="First Name"
                        onChange={(e) => {
                          setFirstName(e.target.value);
                        }}
                        variant="outlined"
                        sx={{ width: "100%" }}
                        value={firstname}
                      />
                    </Grid>
                    <Grid item xs={6}>
                      <TextField
                        id="lastname"
                        label="Last Name"
                        onChange={(e) => {
                          setLastName(e.target.value);
                        }}
                        variant="outlined"
                        sx={{ width: "100%" }}
                        value={lasttname}
                      />
                    </Grid>
                  </Grid>
                </div>
                <div className="checkboxall">
                  <div>
                    <TextField
                      id="email"
                      label="Email"
                      onChange={(e) => {
                        setEmail(e.target.value);
                      }}
                      variant="outlined"
                      sx={{ width: "100%" }}
                      value={email}
                    />
                  </div>

                  <div className="CheckboxPDPA">
                    <FormControlLabel
                      control={
                        <Checkbox
                          onChange={(e) => setPDPA(e.target.checked)}
                          checked={pdpa}
                        />
                      }
                      label="Confirm PDPA"
                    />
                  </div>

                  <div className="Gender">
                    <FormControl>
                      <FormLabel id="demo-row-radio-buttons-group-label">
                        Gender
                      </FormLabel>
                      <RadioGroup
                        row
                        aria-labelledby="demo-row-radio-buttons-group-label"
                        name="row-radio-buttons-group"
                        value={gender}
                        onChange={(e) => setGender(e.target.value)}
                      >
                        <FormControlLabel
                          value="Male"
                          control={<Radio />}
                          label="Male"
                        />
                        <FormControlLabel
                          value="Female"
                          control={<Radio />}
                          label="Female"
                        />
                        <FormControlLabel
                          value="Etc"
                          control={<Radio />}
                          label="Etc"
                        />
                      </RadioGroup>
                    </FormControl>
                  </div>

                  <div className="Hobby">
                    <FormLabel component="legend">Hobby</FormLabel>
                    <FormGroup
                      row
                      aria-labelledby="demo-row-radio-buttons-group-label"
                    >
                      <FormControlLabel
                        control={
                          <Checkbox
                            value="Game"
                            checked={hobby.includes("Game")}
                            onChange={Hobbychange}
                          />
                        }
                        label="Game"
                      />
                      <FormControlLabel
                        control={
                          <Checkbox
                            value="Music"
                            checked={hobby.includes("Music")}
                            onChange={Hobbychange}
                          />
                        }
                        label="Music"
                      />
                      <FormControlLabel
                        control={
                          <Checkbox
                            value="Craff"
                            checked={hobby.includes("Craff")}
                            onChange={Hobbychange}
                          />
                        }
                        label="Craff"
                      />
                      <FormControlLabel
                        control={
                          <Checkbox
                            value="Reading"
                            checked={hobby.includes("Reading")}
                            onChange={Hobbychange}
                          />
                        }
                        label="Reading"
                      />
                    </FormGroup>
                  </div>

                  <div className="Status">
                    <FormControl fullWidth>
                      <InputLabel id="demo-simple-select-label">
                        Status
                      </InputLabel>
                      <Select
                        labelId="demo-simple-select-label"
                        id="demo-simple-select"
                        value={status}
                        label="Status"
                        onChange={(e) => {
                          setStatus(e.target.value);
                        }}
                      >
                        <MenuItem value="">None</MenuItem>
                        <MenuItem value={"Single"}>Single</MenuItem>
                        <MenuItem value={"Married"}>Married</MenuItem>
                        <MenuItem value={"Divorce"}>Divorce</MenuItem>
                      </Select>
                    </FormControl>
                  </div>

                  <div className="Note">
                    <TextField
                      id="outlined-basic"
                      onChange={(e) => {
                        setNote(e.target.value);
                      }}
                      label="Note"
                      variant="outlined"
                      sx={{ width: "100%" }}
                      value={note}
                    />
                  </div>

                  <div className="button">
                    <Stack
                      direction="row"
                      spacing={2}
                      sx={{ display: "flex", justifyContent: "flex-end" }}
                    >
                      <Button variant="contained" onClick={reset}>
                        Reset
                      </Button>
                      <Button variant="contained" onClick={adduser}>
                        Submit
                      </Button>
                    </Stack>
                  </div>
                </div>
              </div>
            </div>

            <div className="grid-item">
              <div className="showuser">
                {user.map((Users: Alluser, index) => (
                  <div key={index} className="userdetail">
                    <div className="icon">
                      <Grid container spacing={4}>
                        <Grid item xs={6}>
                          <p className="UserText"> User : {index + 1}</p>
                        </Grid>
                        <Grid item xs={6}>
                          <div className="flexbt">
                            <DeleteIcon
                              className="bt"
                              onClick={() => HandleDelete(index)}
                            />
                          </div>
                        </Grid>
                      </Grid>
                    </div>
                    <ListUser key={index} user={Users} />
                  </div>
                ))}
              </div>
            </div>
          </div>
        </form>
      </>
    </>
  );
}
